-- WARNING: This schema is for context only and is not meant to be run.
-- Table order and constraints may not be valid for execution.

CREATE TABLE public.admin_users (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id uuid UNIQUE,
  role text NOT NULL CHECK (role = ANY (ARRAY['super_admin'::text, 'content_manager'::text, 'user_manager'::text, 'marketing_manager'::text, 'community_manager'::text])),
  permissions jsonb NOT NULL DEFAULT '{}'::jsonb,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  created_by uuid,
  last_login_at timestamp with time zone,
  CONSTRAINT admin_users_pkey PRIMARY KEY (id),
  CONSTRAINT admin_users_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id),
  CONSTRAINT admin_users_created_by_fkey FOREIGN KEY (created_by) REFERENCES public.admin_users(id)
);
CREATE TABLE public.blocked_users (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  blocker_id uuid NOT NULL,
  blocked_id uuid NOT NULL,
  block_reason text,
  blocked_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT blocked_users_pkey PRIMARY KEY (id),
  CONSTRAINT blocked_users_blocker_id_fkey FOREIGN KEY (blocker_id) REFERENCES public.profiles(id),
  CONSTRAINT blocked_users_blocked_id_fkey FOREIGN KEY (blocked_id) REFERENCES public.profiles(id)
);
CREATE TABLE public.blog_categories (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  name text NOT NULL UNIQUE,
  slug text NOT NULL UNIQUE,
  description text,
  color text,
  icon text,
  post_count integer DEFAULT 0,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT blog_categories_pkey PRIMARY KEY (id)
);
CREATE TABLE public.blog_post_tags (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  post_id uuid NOT NULL,
  tag_id uuid NOT NULL,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT blog_post_tags_pkey PRIMARY KEY (id),
  CONSTRAINT blog_post_tags_post_id_fkey FOREIGN KEY (post_id) REFERENCES public.blog_posts(id),
  CONSTRAINT blog_post_tags_tag_id_fkey FOREIGN KEY (tag_id) REFERENCES public.blog_tags(id)
);
CREATE TABLE public.blog_posts (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  title text NOT NULL,
  slug text NOT NULL UNIQUE,
  excerpt text,
  content text NOT NULL,
  meta_title text,
  meta_description text,
  meta_keywords ARRAY,
  og_image text,
  featured_image text,
  featured_image_alt text,
  category_id uuid,
  author_id uuid,
  author_name text,
  status text DEFAULT 'draft'::text CHECK (status = ANY (ARRAY['draft'::text, 'published'::text, 'scheduled'::text, 'archived'::text])),
  published_at timestamp with time zone,
  scheduled_for timestamp with time zone,
  view_count integer DEFAULT 0,
  like_count integer DEFAULT 0,
  comment_count integer DEFAULT 0,
  share_count integer DEFAULT 0,
  reading_time_minutes integer,
  word_count integer,
  is_featured boolean DEFAULT false,
  is_pinned boolean DEFAULT false,
  featured_order integer,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  search_vector tsvector,
  CONSTRAINT blog_posts_pkey PRIMARY KEY (id),
  CONSTRAINT blog_posts_category_id_fkey FOREIGN KEY (category_id) REFERENCES public.blog_categories(id),
  CONSTRAINT blog_posts_author_id_fkey FOREIGN KEY (author_id) REFERENCES auth.users(id)
);
CREATE TABLE public.blog_tags (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  name text NOT NULL UNIQUE,
  slug text NOT NULL UNIQUE,
  post_count integer DEFAULT 0,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT blog_tags_pkey PRIMARY KEY (id)
);
CREATE TABLE public.business_certifications (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  business_profile_id uuid NOT NULL,
  certification_name text NOT NULL,
  certification_type text CHECK (certification_type = ANY (ARRAY['quality'::text, 'safety'::text, 'organic'::text, 'halal'::text, 'environmental'::text, 'biosecurity'::text, 'iso'::text, 'gmp'::text, 'haccp'::text, 'fssai'::text, 'other'::text])),
  issuing_authority text NOT NULL,
  issue_date date NOT NULL,
  expiry_date date,
  does_not_expire boolean NOT NULL DEFAULT false,
  certificate_number text,
  certificate_file_url text,
  sort_order integer NOT NULL DEFAULT 0,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT business_certifications_pkey PRIMARY KEY (id),
  CONSTRAINT business_certifications_business_profile_id_fkey FOREIGN KEY (business_profile_id) REFERENCES public.business_profiles(id)
);
CREATE TABLE public.business_contact_persons (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  business_profile_id uuid NOT NULL,
  profile_id uuid NOT NULL,
  contact_type text NOT NULL CHECK (contact_type = ANY (ARRAY['sales'::text, 'technical'::text, 'admin'::text, 'customer_service'::text, 'orders'::text, 'hr'::text, 'support'::text])),
  designation text,
  department text,
  is_primary boolean NOT NULL DEFAULT false,
  phone text,
  email text,
  whatsapp text,
  available_hours text,
  languages ARRAY DEFAULT '{}'::text[],
  sort_order integer NOT NULL DEFAULT 0,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT business_contact_persons_pkey PRIMARY KEY (id),
  CONSTRAINT business_contact_persons_business_profile_id_fkey FOREIGN KEY (business_profile_id) REFERENCES public.business_profiles(id),
  CONSTRAINT business_contact_persons_profile_id_fkey FOREIGN KEY (profile_id) REFERENCES public.profiles(id),
  CONSTRAINT contact_must_be_team_member FOREIGN KEY (business_profile_id) REFERENCES public.business_team_members(business_profile_id),
  CONSTRAINT contact_must_be_team_member FOREIGN KEY (profile_id) REFERENCES public.business_team_members(business_profile_id),
  CONSTRAINT contact_must_be_team_member FOREIGN KEY (business_profile_id) REFERENCES public.business_team_members(profile_id),
  CONSTRAINT contact_must_be_team_member FOREIGN KEY (profile_id) REFERENCES public.business_team_members(profile_id)
);
CREATE TABLE public.business_farm_details (
  business_profile_id uuid NOT NULL,
  farm_type ARRAY NOT NULL DEFAULT '{}'::text[] CHECK (farm_type <@ ARRAY['broiler'::text, 'layer'::text, 'breeder'::text, 'hatchery'::text, 'integrated'::text, 'organic'::text, 'free_range'::text]),
  total_capacity integer CHECK (total_capacity >= 0),
  number_of_sheds integer CHECK (number_of_sheds >= 0),
  farming_system text CHECK (farming_system = ANY (ARRAY['conventional'::text, 'organic'::text, 'free_range'::text, 'cage_free'::text, 'deep_litter'::text, 'battery_cage'::text, 'semi_intensive'::text])),
  avg_birds_per_batch integer CHECK (avg_birds_per_batch >= 0),
  batches_per_year integer CHECK (batches_per_year >= 0 AND batches_per_year <= 12),
  breeds_raised ARRAY DEFAULT '{}'::text[],
  organic_certified boolean DEFAULT false,
  halal_certified boolean DEFAULT false,
  animal_welfare_certified boolean DEFAULT false,
  fssai_certified boolean DEFAULT false,
  has_biosecurity_system boolean DEFAULT false,
  has_climate_control boolean DEFAULT false,
  has_automated_feeding boolean DEFAULT false,
  has_waste_management boolean DEFAULT false,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT business_farm_details_pkey PRIMARY KEY (business_profile_id),
  CONSTRAINT business_farm_details_business_profile_id_fkey FOREIGN KEY (business_profile_id) REFERENCES public.business_profiles(id)
);
CREATE TABLE public.business_jobs (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  business_profile_id uuid NOT NULL,
  job_title text NOT NULL,
  job_type text NOT NULL CHECK (job_type = ANY (ARRAY['full_time'::text, 'part_time'::text, 'contract'::text, 'internship'::text, 'seasonal'::text])),
  job_category text NOT NULL CHECK (job_category = ANY (ARRAY['farm_management'::text, 'veterinary'::text, 'technical'::text, 'sales'::text, 'production'::text, 'quality_control'::text, 'maintenance'::text, 'administration'::text, 'warehouse'::text, 'delivery'::text, 'supervisor'::text, 'worker'::text, 'manager'::text, 'other'::text])),
  work_location_type text NOT NULL CHECK (work_location_type = ANY (ARRAY['on_site'::text, 'remote'::text, 'hybrid'::text])),
  job_location_state text,
  job_location_city text,
  job_description text NOT NULL,
  responsibilities text,
  requirements text,
  experience_required text CHECK (experience_required = ANY (ARRAY['fresher'::text, '0-1_years'::text, '1-3_years'::text, '3-5_years'::text, '5-10_years'::text, '10+_years'::text])),
  education_required text,
  show_salary boolean NOT NULL DEFAULT false,
  salary_min numeric,
  salary_max numeric,
  salary_period text CHECK (salary_period = ANY (ARRAY['monthly'::text, 'annual'::text])),
  benefits ARRAY,
  application_type text NOT NULL CHECK (application_type = ANY (ARRAY['internal'::text, 'external'::text, 'email'::text])),
  application_url text,
  application_email text,
  application_instructions text,
  number_of_openings integer DEFAULT 1 CHECK (number_of_openings > 0),
  is_active boolean NOT NULL DEFAULT true,
  expires_at date,
  view_count integer NOT NULL DEFAULT 0,
  application_count integer NOT NULL DEFAULT 0,
  posted_at timestamp with time zone NOT NULL DEFAULT now(),
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  job_type_id uuid,
  location_place_id character varying,
  location_city character varying,
  location_state character varying,
  location_country character varying DEFAULT 'IND'::character varying,
  location_coordinates USER-DEFINED,
  CONSTRAINT business_jobs_pkey PRIMARY KEY (id),
  CONSTRAINT business_jobs_business_profile_id_fkey FOREIGN KEY (business_profile_id) REFERENCES public.business_profiles(id),
  CONSTRAINT business_jobs_job_type_id_fkey FOREIGN KEY (job_type_id) REFERENCES public.job_types(id)
);
CREATE TABLE public.business_locations (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  business_profile_id uuid NOT NULL,
  location_type text NOT NULL CHECK (location_type = ANY (ARRAY['headquarters'::text, 'branch'::text, 'warehouse'::text, 'farm'::text, 'factory'::text, 'office'::text, 'retail'::text, 'distribution_center'::text])),
  location_name text,
  address text NOT NULL,
  state text NOT NULL,
  district text,
  city text,
  pincode text,
  country text NOT NULL DEFAULT 'India'::text,
  phone text,
  email text,
  latitude numeric,
  longitude numeric,
  is_primary boolean NOT NULL DEFAULT false,
  sort_order integer NOT NULL DEFAULT 0,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT business_locations_pkey PRIMARY KEY (id),
  CONSTRAINT business_locations_business_profile_id_fkey FOREIGN KEY (business_profile_id) REFERENCES public.business_profiles(id)
);
CREATE TABLE public.business_products (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  business_profile_id uuid NOT NULL,
  product_name text NOT NULL,
  product_code text,
  product_category text NOT NULL CHECK (product_category = ANY (ARRAY['feed'::text, 'medicine'::text, 'vaccine'::text, 'supplement'::text, 'equipment'::text, 'chicks'::text, 'eggs'::text, 'meat'::text, 'disinfectant'::text, 'packaging'::text, 'spare_parts'::text, 'lab_supplies'::text, 'other'::text])),
  product_subcategory text,
  short_description text CHECK (char_length(short_description) <= 200),
  full_description text,
  specifications jsonb DEFAULT '{}'::jsonb,
  show_price boolean NOT NULL DEFAULT false,
  price numeric,
  price_unit text,
  mrp numeric,
  is_available boolean NOT NULL DEFAULT true,
  minimum_order_quantity integer,
  moq_unit text,
  featured_image_url text,
  is_published boolean NOT NULL DEFAULT true,
  sort_order integer NOT NULL DEFAULT 0,
  view_count integer NOT NULL DEFAULT 0,
  inquiry_count integer NOT NULL DEFAULT 0,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  primary_category_id uuid,
  category_path ARRAY DEFAULT '{}'::uuid[],
  bird_types ARRAY DEFAULT '{}'::character varying[],
  age_groups ARRAY DEFAULT '{}'::character varying[],
  formulation character varying,
  certifications ARRAY DEFAULT '{}'::character varying[],
  search_keywords ARRAY,
  CONSTRAINT business_products_pkey PRIMARY KEY (id),
  CONSTRAINT business_products_business_profile_id_fkey FOREIGN KEY (business_profile_id) REFERENCES public.business_profiles(id),
  CONSTRAINT business_products_primary_category_id_fkey FOREIGN KEY (primary_category_id) REFERENCES public.product_categories(id)
);
CREATE TABLE public.business_profiles (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  business_name text NOT NULL,
  business_slug text NOT NULL UNIQUE,
  display_name text,
  logo_url text,
  cover_photo_url text,
  tagline text CHECK (char_length(tagline) <= 150),
  about text CHECK (char_length(about) <= 500),
  business_type text NOT NULL CHECK (business_type = ANY (ARRAY['farm'::text, 'feed_mill'::text, 'hatchery'::text, 'processing_plant'::text, 'medicine_company'::text, 'equipment_supplier'::text, 'chick_supplier'::text, 'service_provider'::text, 'laboratory'::text, 'logistics'::text, 'retail'::text, 'distributor'::text, 'integrator'::text, 'other'::text])),
  industry_category text,
  company_size text CHECK (company_size = ANY (ARRAY['1-10'::text, '11-50'::text, '51-200'::text, '201-500'::text, '500+'::text])),
  founded_year integer CHECK (founded_year >= 1900 AND founded_year::numeric <= EXTRACT(year FROM CURRENT_DATE)),
  website_url text,
  owner_id uuid NOT NULL,
  is_verified boolean NOT NULL DEFAULT false,
  verification_date date,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  business_type_id uuid,
  specializations ARRAY DEFAULT '{}'::character varying[],
  production_capacity jsonb,
  service_areas ARRAY DEFAULT '{}'::character varying[],
  CONSTRAINT business_profiles_pkey PRIMARY KEY (id),
  CONSTRAINT business_profiles_owner_id_fkey FOREIGN KEY (owner_id) REFERENCES public.profiles(id),
  CONSTRAINT business_profiles_business_type_id_fkey FOREIGN KEY (business_type_id) REFERENCES public.business_types(id)
);
CREATE TABLE public.business_profiles_contact (
  business_profile_id uuid NOT NULL,
  headquarters_address text,
  headquarters_state text,
  headquarters_city text,
  country text NOT NULL DEFAULT 'India'::text,
  phone text,
  email text,
  whatsapp_business text,
  registration_number text,
  tax_id text,
  pan_number text,
  fssai_license text,
  trade_license text,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT business_profiles_contact_pkey PRIMARY KEY (business_profile_id),
  CONSTRAINT business_profiles_contact_business_profile_id_fkey FOREIGN KEY (business_profile_id) REFERENCES public.business_profiles(id)
);
CREATE TABLE public.business_service_areas (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  business_profile_id uuid NOT NULL,
  coverage_type text NOT NULL CHECK (coverage_type = ANY (ARRAY['state'::text, 'district'::text, 'city'::text, 'pincode'::text, 'national'::text])),
  state text,
  district text,
  city text,
  pincode text,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT business_service_areas_pkey PRIMARY KEY (id),
  CONSTRAINT business_service_areas_business_profile_id_fkey FOREIGN KEY (business_profile_id) REFERENCES public.business_profiles(id)
);
CREATE TABLE public.business_stats (
  business_profile_id uuid NOT NULL,
  followers_count integer NOT NULL DEFAULT 0 CHECK (followers_count >= 0),
  team_members_count integer NOT NULL DEFAULT 0 CHECK (team_members_count >= 0),
  posts_count integer NOT NULL DEFAULT 0 CHECK (posts_count >= 0),
  products_count integer NOT NULL DEFAULT 0 CHECK (products_count >= 0),
  products_views_count integer NOT NULL DEFAULT 0 CHECK (products_views_count >= 0),
  product_inquiries_count integer NOT NULL DEFAULT 0 CHECK (product_inquiries_count >= 0),
  product_reviews_count integer NOT NULL DEFAULT 0 CHECK (product_reviews_count >= 0),
  average_product_rating numeric CHECK (average_product_rating >= 0::numeric AND average_product_rating <= 5::numeric),
  active_jobs_count integer NOT NULL DEFAULT 0 CHECK (active_jobs_count >= 0),
  total_jobs_posted integer NOT NULL DEFAULT 0 CHECK (total_jobs_posted >= 0),
  job_applications_count integer NOT NULL DEFAULT 0 CHECK (job_applications_count >= 0),
  profile_views_count integer NOT NULL DEFAULT 0 CHECK (profile_views_count >= 0),
  profile_views_this_month integer NOT NULL DEFAULT 0 CHECK (profile_views_this_month >= 0),
  last_updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT business_stats_pkey PRIMARY KEY (business_profile_id),
  CONSTRAINT business_stats_business_profile_id_fkey FOREIGN KEY (business_profile_id) REFERENCES public.business_profiles(id)
);
CREATE TABLE public.business_supplier_details (
  business_profile_id uuid NOT NULL,
  supply_categories ARRAY NOT NULL DEFAULT '{}'::text[] CHECK (supply_categories <@ ARRAY['feed'::text, 'medicine'::text, 'vaccines'::text, 'equipment'::text, 'chicks'::text, 'supplements'::text, 'disinfectants'::text, 'packaging'::text, 'spare_parts'::text, 'lab_supplies'::text, 'other'::text]),
  authorized_brands ARRAY DEFAULT '{}'::text[],
  own_brands ARRAY DEFAULT '{}'::text[],
  minimum_order_value numeric,
  minimum_order_quantity text,
  bulk_discount_available boolean DEFAULT false,
  home_delivery_available boolean DEFAULT false,
  delivery_time_days integer,
  delivery_charges_info text,
  free_delivery_above_amount numeric,
  payment_terms ARRAY DEFAULT '{}'::text[],
  credit_period_days integer,
  technical_support_available boolean DEFAULT false,
  after_sales_service boolean DEFAULT false,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT business_supplier_details_pkey PRIMARY KEY (business_profile_id),
  CONSTRAINT business_supplier_details_business_profile_id_fkey FOREIGN KEY (business_profile_id) REFERENCES public.business_profiles(id)
);
CREATE TABLE public.business_team_members (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  business_profile_id uuid NOT NULL,
  profile_id uuid NOT NULL,
  role_title text NOT NULL,
  department text,
  employment_type text CHECK (employment_type = ANY (ARRAY['full_time'::text, 'part_time'::text, 'contract'::text, 'advisor'::text])),
  join_date date,
  is_admin boolean NOT NULL DEFAULT false,
  can_post_updates boolean NOT NULL DEFAULT false,
  can_manage_products boolean NOT NULL DEFAULT false,
  can_manage_jobs boolean NOT NULL DEFAULT false,
  can_view_analytics boolean NOT NULL DEFAULT false,
  show_on_page boolean NOT NULL DEFAULT true,
  sort_order integer NOT NULL DEFAULT 0,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT business_team_members_pkey PRIMARY KEY (id),
  CONSTRAINT business_team_members_business_profile_id_fkey FOREIGN KEY (business_profile_id) REFERENCES public.business_profiles(id),
  CONSTRAINT business_team_members_profile_id_fkey FOREIGN KEY (profile_id) REFERENCES public.profiles(id)
);
CREATE TABLE public.business_types (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  parent_id uuid,
  name character varying NOT NULL,
  slug character varying NOT NULL UNIQUE,
  level integer NOT NULL,
  icon character varying,
  description text,
  display_order integer DEFAULT 0,
  is_active boolean DEFAULT true,
  created_at timestamp without time zone DEFAULT now(),
  CONSTRAINT business_types_pkey PRIMARY KEY (id),
  CONSTRAINT business_types_parent_id_fkey FOREIGN KEY (parent_id) REFERENCES public.business_types(id)
);
CREATE TABLE public.connection_suggestions (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  profile_id uuid NOT NULL,
  suggested_profile_id uuid NOT NULL,
  suggestion_reason text NOT NULL CHECK (suggestion_reason = ANY (ARRAY['mutual_connections'::text, 'same_location'::text, 'same_role'::text, 'same_organization'::text, 'similar_skills'::text, 'system_recommendation'::text])),
  relevance_score numeric CHECK (relevance_score >= 0::numeric AND relevance_score <= 1::numeric),
  status text NOT NULL DEFAULT 'active'::text CHECK (status = ANY (ARRAY['active'::text, 'dismissed'::text, 'connected'::text])),
  suggested_at timestamp with time zone NOT NULL DEFAULT now(),
  dismissed_at timestamp with time zone,
  CONSTRAINT connection_suggestions_pkey PRIMARY KEY (id),
  CONSTRAINT connection_suggestions_profile_id_fkey FOREIGN KEY (profile_id) REFERENCES public.profiles(id),
  CONSTRAINT connection_suggestions_suggested_profile_id_fkey FOREIGN KEY (suggested_profile_id) REFERENCES public.profiles(id)
);
CREATE TABLE public.connections (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  profile_id_1 uuid NOT NULL,
  profile_id_2 uuid NOT NULL,
  status text NOT NULL DEFAULT 'pending'::text CHECK (status = ANY (ARRAY['pending'::text, 'connected'::text, 'blocked'::text])),
  requested_by uuid NOT NULL,
  requested_at timestamp with time zone NOT NULL DEFAULT now(),
  responded_at timestamp with time zone,
  connection_message text CHECK (char_length(connection_message) <= 300),
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT connections_pkey PRIMARY KEY (id),
  CONSTRAINT connections_profile_id_1_fkey FOREIGN KEY (profile_id_1) REFERENCES public.profiles(id),
  CONSTRAINT connections_profile_id_2_fkey FOREIGN KEY (profile_id_2) REFERENCES public.profiles(id),
  CONSTRAINT connections_requested_by_fkey FOREIGN KEY (requested_by) REFERENCES public.profiles(id)
);
CREATE TABLE public.contact_submissions (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  full_name text NOT NULL,
  email text NOT NULL,
  phone text,
  company_name text,
  subject text NOT NULL,
  message text NOT NULL,
  inquiry_type text,
  status text DEFAULT 'new'::text CHECK (status = ANY (ARRAY['new'::text, 'read'::text, 'replied'::text, 'in_progress'::text, 'resolved'::text, 'spam'::text])),
  priority text DEFAULT 'normal'::text CHECK (priority = ANY (ARRAY['low'::text, 'normal'::text, 'high'::text, 'urgent'::text])),
  assigned_to uuid,
  assigned_at timestamp with time zone,
  replied_by uuid,
  replied_at timestamp with time zone,
  reply_message text,
  admin_notes text,
  tags ARRAY,
  source text,
  user_agent text,
  ip_address text,
  referrer text,
  follow_up_required boolean DEFAULT false,
  follow_up_date date,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  resolved_at timestamp with time zone,
  CONSTRAINT contact_submissions_pkey PRIMARY KEY (id),
  CONSTRAINT contact_submissions_assigned_to_fkey FOREIGN KEY (assigned_to) REFERENCES public.admin_users(id),
  CONSTRAINT contact_submissions_replied_by_fkey FOREIGN KEY (replied_by) REFERENCES public.admin_users(id)
);
CREATE TABLE public.conversation_participants (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  conversation_id uuid NOT NULL,
  user_id uuid NOT NULL,
  is_admin boolean NOT NULL DEFAULT false,
  is_active boolean NOT NULL DEFAULT true,
  joined_at timestamp with time zone NOT NULL DEFAULT now(),
  left_at timestamp with time zone,
  last_read_at timestamp with time zone NOT NULL DEFAULT now(),
  unread_count integer NOT NULL DEFAULT 0 CHECK (unread_count >= 0),
  muted_until timestamp with time zone,
  is_muted boolean NOT NULL DEFAULT false,
  is_archived boolean DEFAULT false,
  archived_at timestamp with time zone,
  CONSTRAINT conversation_participants_pkey PRIMARY KEY (id),
  CONSTRAINT conversation_participants_conversation_id_fkey FOREIGN KEY (conversation_id) REFERENCES public.conversations(id),
  CONSTRAINT conversation_participants_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.profiles(id)
);
CREATE TABLE public.conversations (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  is_group boolean NOT NULL DEFAULT false,
  group_name text,
  group_photo_url text,
  group_description text CHECK (char_length(group_description) <= 500),
  created_by uuid NOT NULL,
  last_message_at timestamp with time zone,
  last_message_preview text CHECK (char_length(last_message_preview) <= 200),
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  total_storage_bytes bigint DEFAULT 0,
  total_messages_count integer DEFAULT 0,
  total_media_count integer DEFAULT 0,
  CONSTRAINT conversations_pkey PRIMARY KEY (id),
  CONSTRAINT conversations_created_by_fkey FOREIGN KEY (created_by) REFERENCES public.profiles(id)
);
CREATE TABLE public.early_access_signups (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  full_name text NOT NULL,
  email text NOT NULL,
  phone text,
  role text,
  company_name text,
  country text,
  interested_in ARRAY,
  message text,
  source text,
  utm_campaign text,
  utm_medium text,
  referrer text,
  status text DEFAULT 'pending'::text CHECK (status = ANY (ARRAY['pending'::text, 'approved'::text, 'invited'::text, 'registered'::text, 'rejected'::text])),
  priority text DEFAULT 'normal'::text CHECK (priority = ANY (ARRAY['low'::text, 'normal'::text, 'high'::text, 'urgent'::text])),
  admin_notes text,
  assigned_to uuid,
  email_sent boolean DEFAULT false,
  email_sent_at timestamp with time zone,
  invite_code text UNIQUE,
  invite_accepted_at timestamp with time zone,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT early_access_signups_pkey PRIMARY KEY (id),
  CONSTRAINT early_access_signups_assigned_to_fkey FOREIGN KEY (assigned_to) REFERENCES public.admin_users(id)
);
CREATE TABLE public.event_types (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  name character varying NOT NULL,
  slug character varying NOT NULL UNIQUE,
  description text,
  icon character varying,
  display_order integer DEFAULT 0,
  is_active boolean DEFAULT true,
  created_at timestamp without time zone DEFAULT now(),
  CONSTRAINT event_types_pkey PRIMARY KEY (id)
);
CREATE TABLE public.follows (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  follower_id uuid NOT NULL,
  following_id uuid NOT NULL,
  following_type text NOT NULL CHECK (following_type = ANY (ARRAY['profile'::text, 'business'::text, 'organization'::text])),
  notify_on_post boolean NOT NULL DEFAULT true,
  notify_on_update boolean NOT NULL DEFAULT false,
  followed_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT follows_pkey PRIMARY KEY (id),
  CONSTRAINT follows_follower_id_fkey FOREIGN KEY (follower_id) REFERENCES public.profiles(id),
  CONSTRAINT follows_following_id_fkey FOREIGN KEY (following_id) REFERENCES public.profiles(id)
);
CREATE TABLE public.job_categories_master (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  category_name text NOT NULL UNIQUE,
  category_description text,
  parent_category_id uuid,
  is_active boolean NOT NULL DEFAULT true,
  sort_order integer NOT NULL DEFAULT 0,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT job_categories_master_pkey PRIMARY KEY (id),
  CONSTRAINT job_categories_master_parent_category_id_fkey FOREIGN KEY (parent_category_id) REFERENCES public.job_categories_master(id)
);
CREATE TABLE public.job_types (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  name character varying NOT NULL,
  slug character varying NOT NULL UNIQUE,
  description text,
  icon character varying,
  display_order integer DEFAULT 0,
  is_active boolean DEFAULT true,
  created_at timestamp without time zone DEFAULT now(),
  CONSTRAINT job_types_pkey PRIMARY KEY (id)
);
CREATE TABLE public.market_prices (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  product_type text NOT NULL CHECK (product_type = ANY (ARRAY['broiler'::text, 'layer'::text, 'breeder'::text, 'chicks_broiler'::text, 'chicks_layer'::text, 'eggs_table'::text, 'eggs_hatching'::text, 'feed_broiler_starter'::text, 'feed_broiler_finisher'::text, 'feed_layer'::text, 'feed_breeder'::text, 'medicine'::text, 'vaccine'::text, 'equipment'::text, 'other'::text])),
  product_name text NOT NULL,
  product_description text CHECK (char_length(product_description) <= 200),
  location_city text,
  location_district text,
  location_state text NOT NULL,
  country text NOT NULL DEFAULT 'India'::text,
  market_name text,
  price numeric NOT NULL CHECK (price >= 0::numeric),
  price_min numeric CHECK (price_min >= 0::numeric),
  price_max numeric CHECK (price_max >= 0::numeric),
  currency text NOT NULL DEFAULT 'INR'::text,
  unit text NOT NULL,
  quality_grade text,
  source text NOT NULL CHECK (source = ANY (ARRAY['user_reported'::text, 'government'::text, 'market_aggregator'::text, 'business_reported'::text, 'api_feed'::text, 'scraped'::text, 'manual'::text])),
  source_url text,
  verified boolean NOT NULL DEFAULT false,
  verified_by uuid,
  effective_date date NOT NULL DEFAULT CURRENT_DATE,
  effective_time time without time zone,
  reported_by uuid,
  notes text CHECK (char_length(notes) <= 500),
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT market_prices_pkey PRIMARY KEY (id),
  CONSTRAINT market_prices_verified_by_fkey FOREIGN KEY (verified_by) REFERENCES public.profiles(id),
  CONSTRAINT market_prices_reported_by_fkey FOREIGN KEY (reported_by) REFERENCES public.profiles(id)
);
CREATE TABLE public.message_reactions (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  message_id uuid NOT NULL,
  user_id uuid NOT NULL,
  reaction text NOT NULL CHECK (char_length(reaction) <= 10),
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT message_reactions_pkey PRIMARY KEY (id),
  CONSTRAINT message_reactions_message_id_fkey FOREIGN KEY (message_id) REFERENCES public.messages(id),
  CONSTRAINT message_reactions_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.profiles(id)
);
CREATE TABLE public.message_read_receipts (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  message_id uuid NOT NULL,
  user_id uuid NOT NULL,
  read_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT message_read_receipts_pkey PRIMARY KEY (id),
  CONSTRAINT message_read_receipts_message_id_fkey FOREIGN KEY (message_id) REFERENCES public.messages(id),
  CONSTRAINT message_read_receipts_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.profiles(id)
);
CREATE TABLE public.messages (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  conversation_id uuid NOT NULL,
  sender_id uuid NOT NULL,
  content text NOT NULL CHECK (char_length(content) <= 5000),
  message_type text NOT NULL DEFAULT 'text'::text CHECK (message_type = ANY (ARRAY['text'::text, 'image'::text, 'video'::text, 'document'::text, 'audio'::text, 'location'::text, 'contact'::text, 'system'::text])),
  media_urls ARRAY DEFAULT '{}'::text[],
  reply_to_message_id uuid,
  forwarded_from_message_id uuid,
  edited boolean DEFAULT false,
  edited_at timestamp with time zone,
  deleted boolean DEFAULT false,
  deleted_at timestamp with time zone,
  read_by ARRAY DEFAULT '{}'::uuid[],
  delivered_to ARRAY DEFAULT '{}'::uuid[],
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  media_metadata jsonb DEFAULT '{}'::jsonb,
  message_size_bytes integer DEFAULT 0,
  last_delivered_at timestamp with time zone,
  last_read_at timestamp with time zone,
  delivery_count integer DEFAULT 0,
  read_count integer DEFAULT 0,
  CONSTRAINT messages_pkey PRIMARY KEY (id),
  CONSTRAINT messages_conversation_id_fkey FOREIGN KEY (conversation_id) REFERENCES public.conversations(id),
  CONSTRAINT messages_sender_id_fkey FOREIGN KEY (sender_id) REFERENCES public.profiles(id),
  CONSTRAINT messages_reply_to_message_id_fkey FOREIGN KEY (reply_to_message_id) REFERENCES public.messages(id),
  CONSTRAINT messages_forwarded_from_message_id_fkey FOREIGN KEY (forwarded_from_message_id) REFERENCES public.messages(id)
);
CREATE TABLE public.newsletter_subscribers (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  email text NOT NULL UNIQUE,
  full_name text,
  subscribed_topics ARRAY,
  frequency text DEFAULT 'weekly'::text CHECK (frequency = ANY (ARRAY['daily'::text, 'weekly'::text, 'monthly'::text])),
  status text DEFAULT 'active'::text CHECK (status = ANY (ARRAY['active'::text, 'unsubscribed'::text, 'bounced'::text, 'complained'::text])),
  double_opt_in boolean DEFAULT false,
  confirmed_at timestamp with time zone,
  source text,
  utm_campaign text,
  utm_medium text,
  utm_source text,
  referrer text,
  emails_sent integer DEFAULT 0,
  emails_opened integer DEFAULT 0,
  emails_clicked integer DEFAULT 0,
  last_email_sent_at timestamp with time zone,
  last_email_opened_at timestamp with time zone,
  unsubscribed_at timestamp with time zone,
  unsubscribe_reason text,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT newsletter_subscribers_pkey PRIMARY KEY (id)
);
CREATE TABLE public.notification_preferences (
  user_id uuid NOT NULL,
  email_post_likes boolean NOT NULL DEFAULT true,
  email_post_comments boolean NOT NULL DEFAULT true,
  email_post_mentions boolean NOT NULL DEFAULT true,
  email_connection_requests boolean NOT NULL DEFAULT true,
  email_messages boolean NOT NULL DEFAULT true,
  email_weekly_digest boolean NOT NULL DEFAULT true,
  email_marketing boolean NOT NULL DEFAULT false,
  push_post_likes boolean NOT NULL DEFAULT false,
  push_post_comments boolean NOT NULL DEFAULT true,
  push_post_mentions boolean NOT NULL DEFAULT true,
  push_connection_requests boolean NOT NULL DEFAULT true,
  push_messages boolean NOT NULL DEFAULT true,
  push_events boolean NOT NULL DEFAULT true,
  in_app_post_likes boolean NOT NULL DEFAULT true,
  in_app_post_comments boolean NOT NULL DEFAULT true,
  in_app_connection_requests boolean NOT NULL DEFAULT true,
  in_app_messages boolean NOT NULL DEFAULT true,
  quiet_hours_enabled boolean NOT NULL DEFAULT false,
  quiet_hours_start time without time zone,
  quiet_hours_end time without time zone,
  digest_frequency text NOT NULL DEFAULT 'weekly'::text CHECK (digest_frequency = ANY (ARRAY['daily'::text, 'weekly'::text, 'monthly'::text, 'never'::text])),
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT notification_preferences_pkey PRIMARY KEY (user_id),
  CONSTRAINT notification_preferences_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.profiles(id)
);
CREATE TABLE public.notification_templates (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  template_key text NOT NULL UNIQUE,
  title_template text NOT NULL,
  content_template text NOT NULL,
  variables jsonb,
  notification_type text NOT NULL,
  is_active boolean NOT NULL DEFAULT true,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT notification_templates_pkey PRIMARY KEY (id)
);
CREATE TABLE public.notifications (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  recipient_id uuid NOT NULL,
  sender_id uuid,
  notification_type text NOT NULL CHECK (notification_type = ANY (ARRAY['post_like'::text, 'post_comment'::text, 'post_share'::text, 'post_mention'::text, 'comment_like'::text, 'comment_reply'::text, 'connection_request'::text, 'connection_accepted'::text, 'message_new'::text, 'message_mention'::text, 'follow_new'::text, 'profile_view'::text, 'endorsement_received'::text, 'job_application'::text, 'job_match'::text, 'event_invitation'::text, 'event_reminder'::text, 'system_announcement'::text, 'system_update'::text, 'badge_earned'::text, 'milestone_reached'::text, 'other'::text])),
  entity_type text CHECK (entity_type = ANY (ARRAY['post'::text, 'comment'::text, 'message'::text, 'connection'::text, 'profile'::text, 'job'::text, 'event'::text, 'product'::text, 'organization'::text, 'other'::text])),
  entity_id uuid,
  title text NOT NULL CHECK (char_length(title) <= 200),
  content text CHECK (char_length(content) <= 500),
  action_url text,
  is_read boolean NOT NULL DEFAULT false,
  read_at timestamp with time zone,
  priority text NOT NULL DEFAULT 'normal'::text CHECK (priority = ANY (ARRAY['low'::text, 'normal'::text, 'high'::text, 'urgent'::text])),
  delivered_via ARRAY DEFAULT '{}'::text[] CHECK (delivered_via <@ ARRAY['in_app'::text, 'email'::text, 'push'::text, 'sms'::text, 'whatsapp'::text]),
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  expires_at timestamp with time zone,
  CONSTRAINT notifications_pkey PRIMARY KEY (id),
  CONSTRAINT notifications_recipient_id_fkey FOREIGN KEY (recipient_id) REFERENCES public.profiles(id),
  CONSTRAINT notifications_sender_id_fkey FOREIGN KEY (sender_id) REFERENCES public.profiles(id)
);
CREATE TABLE public.offline_message_queue (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL,
  conversation_id uuid NOT NULL,
  temp_id text NOT NULL,
  content text NOT NULL,
  message_type text NOT NULL DEFAULT 'text'::text,
  media_urls ARRAY DEFAULT '{}'::text[],
  reply_to_message_id uuid,
  sync_status text NOT NULL DEFAULT 'pending'::text CHECK (sync_status = ANY (ARRAY['pending'::text, 'syncing'::text, 'synced'::text, 'failed'::text])),
  retry_count integer DEFAULT 0,
  last_retry_at timestamp with time zone,
  error_message text,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  synced_at timestamp with time zone,
  CONSTRAINT offline_message_queue_pkey PRIMARY KEY (id),
  CONSTRAINT offline_message_queue_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.profiles(id),
  CONSTRAINT offline_message_queue_conversation_id_fkey FOREIGN KEY (conversation_id) REFERENCES public.conversations(id)
);
CREATE TABLE public.organization_announcements (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  organization_id uuid NOT NULL,
  created_by uuid NOT NULL,
  title text NOT NULL,
  content text NOT NULL,
  announcement_type text CHECK (announcement_type = ANY (ARRAY['general'::text, 'urgent'::text, 'event'::text, 'meeting'::text, 'update'::text, 'reminder'::text])),
  target_audience text NOT NULL CHECK (target_audience = ANY (ARRAY['all_members'::text, 'specific_tier'::text, 'leadership'::text])),
  target_tier_id uuid,
  send_email boolean NOT NULL DEFAULT false,
  send_push boolean NOT NULL DEFAULT false,
  is_published boolean NOT NULL DEFAULT false,
  published_at timestamp with time zone,
  view_count integer NOT NULL DEFAULT 0,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT organization_announcements_pkey PRIMARY KEY (id),
  CONSTRAINT organization_announcements_organization_id_fkey FOREIGN KEY (organization_id) REFERENCES public.organizations(id),
  CONSTRAINT organization_announcements_created_by_fkey FOREIGN KEY (created_by) REFERENCES public.profiles(id),
  CONSTRAINT organization_announcements_target_tier_id_fkey FOREIGN KEY (target_tier_id) REFERENCES public.organization_membership_tiers(id)
);
CREATE TABLE public.organization_committee_members (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  committee_id uuid NOT NULL,
  profile_id uuid NOT NULL,
  member_role text CHECK (member_role = ANY (ARRAY['chairperson'::text, 'co_chair'::text, 'member'::text, 'advisor'::text])),
  joined_date date NOT NULL DEFAULT CURRENT_DATE,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT organization_committee_members_pkey PRIMARY KEY (id),
  CONSTRAINT organization_committee_members_committee_id_fkey FOREIGN KEY (committee_id) REFERENCES public.organization_committees(id),
  CONSTRAINT organization_committee_members_profile_id_fkey FOREIGN KEY (profile_id) REFERENCES public.profiles(id)
);
CREATE TABLE public.organization_committees (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  organization_id uuid NOT NULL,
  committee_name text NOT NULL,
  committee_description text,
  focus_areas ARRAY,
  chairperson_id uuid,
  is_active boolean NOT NULL DEFAULT true,
  formed_date date,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT organization_committees_pkey PRIMARY KEY (id),
  CONSTRAINT organization_committees_organization_id_fkey FOREIGN KEY (organization_id) REFERENCES public.organizations(id),
  CONSTRAINT organization_committees_chairperson_id_fkey FOREIGN KEY (chairperson_id) REFERENCES public.profiles(id)
);
CREATE TABLE public.organization_event_agenda (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  event_id uuid NOT NULL,
  session_title text NOT NULL,
  session_description text,
  session_type text NOT NULL CHECK (session_type = ANY (ARRAY['keynote'::text, 'panel'::text, 'presentation'::text, 'workshop'::text, 'break'::text, 'lunch'::text, 'networking'::text, 'demo'::text, 'qa'::text, 'other'::text])),
  session_date date NOT NULL,
  start_time time without time zone NOT NULL,
  end_time time without time zone NOT NULL,
  session_location text,
  virtual_room_link text,
  speaker_ids ARRAY,
  max_participants integer,
  registration_required boolean NOT NULL DEFAULT false,
  is_published boolean NOT NULL DEFAULT true,
  sort_order integer NOT NULL DEFAULT 0,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT organization_event_agenda_pkey PRIMARY KEY (id)
);
CREATE TABLE public.organization_event_exhibitors (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  event_id uuid NOT NULL,
  exhibitor_business_id uuid NOT NULL,
  booth_number text,
  booth_size text CHECK (booth_size = ANY (ARRAY['small'::text, 'medium'::text, 'large'::text, 'custom'::text])),
  booth_location text,
  exhibitor_tier text CHECK (exhibitor_tier = ANY (ARRAY['platinum'::text, 'gold'::text, 'silver'::text, 'bronze'::text, 'standard'::text, 'startup'::text])),
  booth_fee numeric,
  payment_status text NOT NULL DEFAULT 'pending'::text CHECK (payment_status = ANY (ARRAY['pending'::text, 'partial'::text, 'completed'::text, 'refunded'::text])),
  payment_reference text,
  confirmation_status text NOT NULL DEFAULT 'pending'::text CHECK (confirmation_status = ANY (ARRAY['pending'::text, 'confirmed'::text, 'waitlist'::text, 'cancelled'::text])),
  show_on_event_page boolean NOT NULL DEFAULT true,
  featured_exhibitor boolean NOT NULL DEFAULT false,
  sort_order integer NOT NULL DEFAULT 0,
  custom_description text,
  showcase_products ARRAY,
  primary_contact_id uuid,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT organization_event_exhibitors_pkey PRIMARY KEY (id),
  CONSTRAINT organization_event_exhibitors_exhibitor_business_id_fkey FOREIGN KEY (exhibitor_business_id) REFERENCES public.business_profiles(id),
  CONSTRAINT organization_event_exhibitors_primary_contact_id_fkey FOREIGN KEY (primary_contact_id) REFERENCES public.profiles(id)
);
CREATE TABLE public.organization_event_feedback (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  event_id uuid NOT NULL,
  attendee_profile_id uuid NOT NULL,
  overall_rating integer CHECK (overall_rating >= 1 AND overall_rating <= 5),
  content_rating integer CHECK (content_rating >= 1 AND content_rating <= 5),
  speakers_rating integer CHECK (speakers_rating >= 1 AND speakers_rating <= 5),
  organization_rating integer CHECK (organization_rating >= 1 AND organization_rating <= 5),
  venue_rating integer CHECK (venue_rating >= 1 AND venue_rating <= 5),
  what_went_well text,
  what_to_improve text,
  additional_comments text,
  would_recommend boolean,
  would_attend_again boolean,
  submitted_at timestamp with time zone NOT NULL DEFAULT now(),
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT organization_event_feedback_pkey PRIMARY KEY (id),
  CONSTRAINT organization_event_feedback_attendee_profile_id_fkey FOREIGN KEY (attendee_profile_id) REFERENCES public.profiles(id)
);
CREATE TABLE public.organization_event_registrations (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  event_id uuid NOT NULL,
  attendee_profile_id uuid NOT NULL,
  registration_type text NOT NULL CHECK (registration_type = ANY (ARRAY['regular'::text, 'speaker'::text, 'exhibitor'::text, 'sponsor'::text, 'vip'::text, 'complimentary'::text])),
  registration_status text NOT NULL DEFAULT 'confirmed'::text CHECK (registration_status = ANY (ARRAY['pending'::text, 'confirmed'::text, 'waitlist'::text, 'cancelled'::text, 'attended'::text, 'no_show'::text])),
  payment_status text CHECK (payment_status = ANY (ARRAY['pending'::text, 'completed'::text, 'refunded'::text])),
  payment_amount numeric,
  payment_reference text,
  checked_in boolean NOT NULL DEFAULT false,
  checked_in_at timestamp with time zone,
  check_in_method text CHECK (check_in_method = ANY (ARRAY['qr_code'::text, 'manual'::text, 'self'::text])),
  qr_code_url text,
  certificate_issued boolean NOT NULL DEFAULT false,
  certificate_url text,
  certificate_issued_at timestamp with time zone,
  registered_at timestamp with time zone NOT NULL DEFAULT now(),
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT organization_event_registrations_pkey PRIMARY KEY (id),
  CONSTRAINT organization_event_registrations_event_id_fkey FOREIGN KEY (event_id) REFERENCES public.organization_events(id),
  CONSTRAINT organization_event_registrations_attendee_profile_id_fkey FOREIGN KEY (attendee_profile_id) REFERENCES public.profiles(id)
);
CREATE TABLE public.organization_event_resources (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  event_id uuid NOT NULL,
  resource_title text NOT NULL,
  resource_description text,
  resource_type text NOT NULL CHECK (resource_type = ANY (ARRAY['presentation'::text, 'document'::text, 'video'::text, 'photo'::text, 'certificate'::text, 'badge'::text, 'brochure'::text, 'other'::text])),
  file_url text NOT NULL,
  file_size_bytes bigint,
  access_level text NOT NULL CHECK (access_level = ANY (ARRAY['public'::text, 'registered_only'::text, 'attended_only'::text, 'speakers_only'::text])),
  associated_session_id uuid,
  uploaded_by uuid,
  download_count integer NOT NULL DEFAULT 0,
  uploaded_at timestamp with time zone NOT NULL DEFAULT now(),
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT organization_event_resources_pkey PRIMARY KEY (id),
  CONSTRAINT organization_event_resources_associated_session_id_fkey FOREIGN KEY (associated_session_id) REFERENCES public.organization_event_agenda(id),
  CONSTRAINT organization_event_resources_uploaded_by_fkey FOREIGN KEY (uploaded_by) REFERENCES public.profiles(id)
);
CREATE TABLE public.organization_event_speakers (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  event_id uuid NOT NULL,
  speaker_profile_id uuid NOT NULL,
  speaker_type text NOT NULL CHECK (speaker_type = ANY (ARRAY['keynote'::text, 'plenary'::text, 'panelist'::text, 'presenter'::text, 'moderator'::text, 'facilitator'::text, 'trainer'::text, 'guest'::text])),
  session_title text,
  session_description text,
  session_date date,
  session_time time without time zone,
  session_duration_minutes integer CHECK (session_duration_minutes > 0),
  session_location text,
  confirmation_status text NOT NULL DEFAULT 'invited'::text CHECK (confirmation_status = ANY (ARRAY['invited'::text, 'confirmed'::text, 'tentative'::text, 'declined'::text, 'cancelled'::text])),
  show_on_event_page boolean NOT NULL DEFAULT true,
  featured_speaker boolean NOT NULL DEFAULT false,
  sort_order integer NOT NULL DEFAULT 0,
  custom_bio text,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT organization_event_speakers_pkey PRIMARY KEY (id),
  CONSTRAINT organization_event_speakers_speaker_profile_id_fkey FOREIGN KEY (speaker_profile_id) REFERENCES public.profiles(id)
);
CREATE TABLE public.organization_event_sponsors (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  event_id uuid NOT NULL,
  sponsor_business_id uuid NOT NULL,
  sponsorship_tier text NOT NULL CHECK (sponsorship_tier = ANY (ARRAY['title'::text, 'platinum'::text, 'gold'::text, 'silver'::text, 'bronze'::text, 'associate'::text, 'partner'::text])),
  sponsorship_amount numeric,
  benefits_received ARRAY,
  payment_status text NOT NULL DEFAULT 'pending'::text CHECK (payment_status = ANY (ARRAY['pending'::text, 'partial'::text, 'completed'::text, 'refunded'::text])),
  payment_reference text,
  show_on_event_page boolean NOT NULL DEFAULT true,
  logo_on_materials boolean NOT NULL DEFAULT true,
  sort_order integer NOT NULL DEFAULT 0,
  custom_message text,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT organization_event_sponsors_pkey PRIMARY KEY (id),
  CONSTRAINT organization_event_sponsors_sponsor_business_id_fkey FOREIGN KEY (sponsor_business_id) REFERENCES public.business_profiles(id)
);
CREATE TABLE public.organization_events (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  organization_id uuid NOT NULL,
  event_name text NOT NULL,
  event_tagline text,
  event_description text NOT NULL,
  event_type text NOT NULL CHECK (event_type = ANY (ARRAY['conference'::text, 'seminar'::text, 'workshop'::text, 'webinar'::text, 'expo'::text, 'summit'::text, 'meeting'::text, 'training'::text, 'other'::text])),
  event_format text NOT NULL CHECK (event_format = ANY (ARRAY['in_person'::text, 'virtual'::text, 'hybrid'::text])),
  start_date date NOT NULL,
  end_date date NOT NULL,
  start_time time without time zone,
  end_time time without time zone,
  timezone text DEFAULT 'Asia/Kolkata'::text,
  venue_name text,
  venue_address text,
  venue_city text,
  venue_state text,
  venue_country text DEFAULT 'India'::text,
  virtual_platform text,
  virtual_meeting_link text,
  registration_required boolean NOT NULL DEFAULT true,
  registration_start_date date,
  registration_end_date date,
  max_attendees integer,
  registration_fee numeric,
  is_free boolean NOT NULL DEFAULT true,
  is_public boolean NOT NULL DEFAULT true,
  members_only boolean NOT NULL DEFAULT false,
  event_banner_url text,
  event_brochure_url text,
  event_status text NOT NULL DEFAULT 'draft'::text CHECK (event_status = ANY (ARRAY['draft'::text, 'published'::text, 'registration_open'::text, 'registration_closed'::text, 'ongoing'::text, 'completed'::text, 'cancelled'::text])),
  view_count integer NOT NULL DEFAULT 0,
  registration_count integer NOT NULL DEFAULT 0,
  created_by uuid NOT NULL,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  event_type_id uuid,
  location_place_id character varying,
  location_city character varying,
  location_state character varying,
  location_country character varying DEFAULT 'IND'::character varying,
  location_coordinates USER-DEFINED,
  CONSTRAINT organization_events_pkey PRIMARY KEY (id),
  CONSTRAINT organization_events_organization_id_fkey FOREIGN KEY (organization_id) REFERENCES public.organizations(id),
  CONSTRAINT organization_events_created_by_fkey FOREIGN KEY (created_by) REFERENCES public.profiles(id),
  CONSTRAINT organization_events_event_type_id_fkey FOREIGN KEY (event_type_id) REFERENCES public.event_types(id)
);
CREATE TABLE public.organization_leadership (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  organization_id uuid NOT NULL,
  profile_id uuid NOT NULL,
  position_title text NOT NULL,
  position_level text CHECK (position_level = ANY (ARRAY['president'::text, 'vice_president'::text, 'secretary'::text, 'treasurer'::text, 'director'::text, 'board_member'::text, 'advisor'::text, 'other'::text])),
  term_start_date date NOT NULL,
  term_end_date date,
  is_current boolean NOT NULL DEFAULT true,
  show_on_page boolean NOT NULL DEFAULT true,
  sort_order integer NOT NULL DEFAULT 0,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT organization_leadership_pkey PRIMARY KEY (id),
  CONSTRAINT organization_leadership_organization_id_fkey FOREIGN KEY (organization_id) REFERENCES public.organizations(id),
  CONSTRAINT organization_leadership_profile_id_fkey FOREIGN KEY (profile_id) REFERENCES public.profiles(id)
);
CREATE TABLE public.organization_member_invitations (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  organization_id uuid NOT NULL,
  invite_type text NOT NULL CHECK (invite_type = ANY (ARRAY['personal'::text, 'business'::text])),
  invited_profile_id uuid,
  invited_business_id uuid,
  invitee_name text,
  invitee_email text,
  invitee_phone text,
  suggested_tier_id uuid,
  invitation_message text,
  invitation_status text NOT NULL DEFAULT 'sent'::text CHECK (invitation_status = ANY (ARRAY['sent'::text, 'delivered'::text, 'viewed'::text, 'accepted'::text, 'declined'::text, 'expired'::text])),
  invitation_token text NOT NULL UNIQUE,
  expires_at timestamp with time zone NOT NULL DEFAULT (now() + '30 days'::interval),
  responded_at timestamp with time zone,
  decline_reason text,
  invited_by uuid NOT NULL,
  invitation_batch_id uuid,
  sent_at timestamp with time zone NOT NULL DEFAULT now(),
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT organization_member_invitations_pkey PRIMARY KEY (id),
  CONSTRAINT organization_member_invitations_organization_id_fkey FOREIGN KEY (organization_id) REFERENCES public.organizations(id),
  CONSTRAINT organization_member_invitations_invited_profile_id_fkey FOREIGN KEY (invited_profile_id) REFERENCES public.profiles(id),
  CONSTRAINT organization_member_invitations_invited_business_id_fkey FOREIGN KEY (invited_business_id) REFERENCES public.business_profiles(id),
  CONSTRAINT organization_member_invitations_suggested_tier_id_fkey FOREIGN KEY (suggested_tier_id) REFERENCES public.organization_membership_tiers(id),
  CONSTRAINT organization_member_invitations_invited_by_fkey FOREIGN KEY (invited_by) REFERENCES public.profiles(id)
);
CREATE TABLE public.organization_members (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  organization_id uuid NOT NULL,
  member_type text NOT NULL CHECK (member_type = ANY (ARRAY['personal'::text, 'business'::text])),
  member_id uuid NOT NULL,
  membership_tier_id uuid,
  membership_number text,
  membership_status text NOT NULL DEFAULT 'pending'::text CHECK (membership_status = ANY (ARRAY['pending'::text, 'active'::text, 'inactive'::text, 'suspended'::text, 'expired'::text, 'cancelled'::text])),
  joined_date date NOT NULL DEFAULT CURRENT_DATE,
  renewal_date date,
  expiry_date date,
  invitation_source text CHECK (invitation_source = ANY (ARRAY['direct'::text, 'bulk_invite'::text, 'self_signup'::text, 'referral'::text])),
  invited_by uuid,
  show_badge_on_profile boolean NOT NULL DEFAULT true,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT organization_members_pkey PRIMARY KEY (id),
  CONSTRAINT organization_members_organization_id_fkey FOREIGN KEY (organization_id) REFERENCES public.organizations(id),
  CONSTRAINT organization_members_membership_tier_id_fkey FOREIGN KEY (membership_tier_id) REFERENCES public.organization_membership_tiers(id),
  CONSTRAINT organization_members_invited_by_fkey FOREIGN KEY (invited_by) REFERENCES public.profiles(id)
);
CREATE TABLE public.organization_membership_applications (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  organization_id uuid NOT NULL,
  applicant_type text NOT NULL CHECK (applicant_type = ANY (ARRAY['personal'::text, 'business'::text])),
  applicant_id uuid NOT NULL,
  requested_tier_id uuid,
  application_message text,
  application_status text NOT NULL DEFAULT 'pending'::text CHECK (application_status = ANY (ARRAY['pending'::text, 'approved'::text, 'rejected'::text, 'withdrawn'::text])),
  reviewed_by uuid,
  reviewed_at timestamp with time zone,
  rejection_reason text,
  admin_notes text,
  applied_at timestamp with time zone NOT NULL DEFAULT now(),
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT organization_membership_applications_pkey PRIMARY KEY (id),
  CONSTRAINT organization_membership_applications_organization_id_fkey FOREIGN KEY (organization_id) REFERENCES public.organizations(id),
  CONSTRAINT organization_membership_applications_requested_tier_id_fkey FOREIGN KEY (requested_tier_id) REFERENCES public.organization_membership_tiers(id),
  CONSTRAINT organization_membership_applications_reviewed_by_fkey FOREIGN KEY (reviewed_by) REFERENCES public.profiles(id)
);
CREATE TABLE public.organization_membership_tiers (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  organization_id uuid NOT NULL,
  tier_name text NOT NULL,
  tier_description text,
  annual_fee numeric,
  joining_fee numeric,
  benefits ARRAY,
  max_members integer,
  is_active boolean NOT NULL DEFAULT true,
  sort_order integer NOT NULL DEFAULT 0,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT organization_membership_tiers_pkey PRIMARY KEY (id),
  CONSTRAINT organization_membership_tiers_organization_id_fkey FOREIGN KEY (organization_id) REFERENCES public.organizations(id)
);
CREATE TABLE public.organization_offices (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  organization_id uuid NOT NULL,
  office_type text NOT NULL CHECK (office_type = ANY (ARRAY['headquarters'::text, 'regional'::text, 'state'::text, 'district'::text, 'branch'::text])),
  office_name text,
  address text NOT NULL,
  state text NOT NULL,
  district text,
  city text,
  pincode text,
  country text NOT NULL DEFAULT 'India'::text,
  phone text,
  email text,
  latitude numeric,
  longitude numeric,
  is_primary boolean NOT NULL DEFAULT false,
  sort_order integer NOT NULL DEFAULT 0,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT organization_offices_pkey PRIMARY KEY (id),
  CONSTRAINT organization_offices_organization_id_fkey FOREIGN KEY (organization_id) REFERENCES public.organizations(id)
);
CREATE TABLE public.organization_resources (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  organization_id uuid NOT NULL,
  resource_title text NOT NULL,
  resource_description text,
  resource_type text NOT NULL CHECK (resource_type = ANY (ARRAY['document'::text, 'video'::text, 'link'::text, 'guideline'::text, 'report'::text, 'newsletter'::text, 'presentation'::text, 'policy'::text, 'other'::text])),
  file_url text,
  external_link text,
  access_level text NOT NULL CHECK (access_level = ANY (ARRAY['public'::text, 'members_only'::text, 'leadership_only'::text])),
  tags ARRAY DEFAULT '{}'::text[],
  download_count integer NOT NULL DEFAULT 0,
  published_at timestamp with time zone NOT NULL DEFAULT now(),
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT organization_resources_pkey PRIMARY KEY (id),
  CONSTRAINT organization_resources_organization_id_fkey FOREIGN KEY (organization_id) REFERENCES public.organizations(id)
);
CREATE TABLE public.organization_stats (
  organization_id uuid NOT NULL,
  total_members_count integer NOT NULL DEFAULT 0 CHECK (total_members_count >= 0),
  personal_members_count integer NOT NULL DEFAULT 0 CHECK (personal_members_count >= 0),
  business_members_count integer NOT NULL DEFAULT 0 CHECK (business_members_count >= 0),
  active_members_count integer NOT NULL DEFAULT 0 CHECK (active_members_count >= 0),
  members_by_tier jsonb DEFAULT '{}'::jsonb,
  total_events_count integer NOT NULL DEFAULT 0 CHECK (total_events_count >= 0),
  upcoming_events_count integer NOT NULL DEFAULT 0 CHECK (upcoming_events_count >= 0),
  completed_events_count integer NOT NULL DEFAULT 0 CHECK (completed_events_count >= 0),
  total_event_registrations integer NOT NULL DEFAULT 0 CHECK (total_event_registrations >= 0),
  posts_count integer NOT NULL DEFAULT 0 CHECK (posts_count >= 0),
  resources_count integer NOT NULL DEFAULT 0 CHECK (resources_count >= 0),
  announcements_count integer NOT NULL DEFAULT 0 CHECK (announcements_count >= 0),
  profile_views_count integer NOT NULL DEFAULT 0 CHECK (profile_views_count >= 0),
  profile_views_this_month integer NOT NULL DEFAULT 0 CHECK (profile_views_this_month >= 0),
  followers_count integer NOT NULL DEFAULT 0 CHECK (followers_count >= 0),
  last_updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT organization_stats_pkey PRIMARY KEY (organization_id),
  CONSTRAINT organization_stats_organization_id_fkey FOREIGN KEY (organization_id) REFERENCES public.organizations(id)
);
CREATE TABLE public.organization_types (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  name character varying NOT NULL,
  slug character varying NOT NULL UNIQUE,
  description text,
  icon character varying,
  display_order integer DEFAULT 0,
  is_active boolean DEFAULT true,
  created_at timestamp without time zone DEFAULT now(),
  CONSTRAINT organization_types_pkey PRIMARY KEY (id)
);
CREATE TABLE public.organizations (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  organization_name text NOT NULL,
  organization_slug text NOT NULL UNIQUE,
  short_name text,
  logo_url text,
  cover_photo_url text,
  tagline text CHECK (char_length(tagline) <= 150),
  about text NOT NULL CHECK (char_length(about) <= 1000),
  organization_type text NOT NULL CHECK (organization_type = ANY (ARRAY['association'::text, 'federation'::text, 'council'::text, 'forum'::text, 'society'::text, 'institution'::text, 'cooperative'::text, 'chamber'::text, 'network'::text, 'community'::text])),
  industry_focus ARRAY,
  geographic_scope text NOT NULL CHECK (geographic_scope = ANY (ARRAY['local'::text, 'state'::text, 'regional'::text, 'national'::text, 'international'::text, 'global'::text])),
  founded_year integer CHECK (founded_year >= 1900 AND founded_year::numeric <= EXTRACT(year FROM CURRENT_DATE)),
  registration_number text,
  website_url text,
  creator_id uuid NOT NULL,
  is_verified boolean NOT NULL DEFAULT false,
  verification_date date,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  organization_type_id uuid,
  CONSTRAINT organizations_pkey PRIMARY KEY (id),
  CONSTRAINT organizations_creator_id_fkey FOREIGN KEY (creator_id) REFERENCES public.profiles(id),
  CONSTRAINT organizations_organization_type_id_fkey FOREIGN KEY (organization_type_id) REFERENCES public.organization_types(id)
);
CREATE TABLE public.organizations_contact (
  organization_id uuid NOT NULL,
  headquarters_address text,
  headquarters_state text,
  headquarters_city text,
  country text NOT NULL DEFAULT 'India'::text,
  phone text,
  email text,
  whatsapp_number text,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT organizations_contact_pkey PRIMARY KEY (organization_id),
  CONSTRAINT organizations_contact_organization_id_fkey FOREIGN KEY (organization_id) REFERENCES public.organizations(id)
);
CREATE TABLE public.post_bookmarks (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  post_id uuid NOT NULL,
  user_id uuid NOT NULL,
  collection_name text DEFAULT 'default'::text,
  notes text CHECK (char_length(notes) <= 500),
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT post_bookmarks_pkey PRIMARY KEY (id),
  CONSTRAINT post_bookmarks_post_id_fkey FOREIGN KEY (post_id) REFERENCES public.posts(id),
  CONSTRAINT post_bookmarks_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.profiles(id)
);
CREATE TABLE public.post_comment_likes (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  comment_id uuid NOT NULL,
  user_id uuid NOT NULL,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT post_comment_likes_pkey PRIMARY KEY (id),
  CONSTRAINT post_comment_likes_comment_id_fkey FOREIGN KEY (comment_id) REFERENCES public.post_comments(id),
  CONSTRAINT post_comment_likes_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.profiles(id)
);
CREATE TABLE public.post_comments (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  post_id uuid NOT NULL,
  author_id uuid NOT NULL,
  content text NOT NULL CHECK (char_length(content) <= 2000),
  parent_comment_id uuid,
  likes_count integer NOT NULL DEFAULT 0 CHECK (likes_count >= 0),
  edited boolean DEFAULT false,
  edited_at timestamp with time zone,
  is_author_reply boolean DEFAULT false,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT post_comments_pkey PRIMARY KEY (id),
  CONSTRAINT post_comments_post_id_fkey FOREIGN KEY (post_id) REFERENCES public.posts(id),
  CONSTRAINT post_comments_author_id_fkey FOREIGN KEY (author_id) REFERENCES public.profiles(id),
  CONSTRAINT post_comments_parent_comment_id_fkey FOREIGN KEY (parent_comment_id) REFERENCES public.post_comments(id)
);
CREATE TABLE public.post_likes (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  post_id uuid NOT NULL,
  user_id uuid NOT NULL,
  reaction_type text NOT NULL DEFAULT 'like'::text CHECK (reaction_type = ANY (ARRAY['like'::text, 'helpful'::text, 'insightful'::text])),
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT post_likes_pkey PRIMARY KEY (id),
  CONSTRAINT post_likes_post_id_fkey FOREIGN KEY (post_id) REFERENCES public.posts(id),
  CONSTRAINT post_likes_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.profiles(id)
);
CREATE TABLE public.post_reports (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  post_id uuid NOT NULL,
  reported_by uuid NOT NULL,
  report_reason text NOT NULL CHECK (report_reason = ANY (ARRAY['spam'::text, 'harassment'::text, 'misinformation'::text, 'inappropriate'::text, 'scam'::text, 'other'::text])),
  report_description text CHECK (char_length(report_description) <= 500),
  status text NOT NULL DEFAULT 'pending'::text CHECK (status = ANY (ARRAY['pending'::text, 'under_review'::text, 'resolved'::text, 'dismissed'::text])),
  reviewed_by uuid,
  reviewed_at timestamp with time zone,
  moderator_notes text,
  action_taken text CHECK (action_taken = ANY (ARRAY['none'::text, 'warning_issued'::text, 'post_hidden'::text, 'post_deleted'::text, 'user_warned'::text, 'user_suspended'::text])),
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT post_reports_pkey PRIMARY KEY (id),
  CONSTRAINT post_reports_post_id_fkey FOREIGN KEY (post_id) REFERENCES public.posts(id),
  CONSTRAINT post_reports_reported_by_fkey FOREIGN KEY (reported_by) REFERENCES public.profiles(id),
  CONSTRAINT post_reports_reviewed_by_fkey FOREIGN KEY (reviewed_by) REFERENCES public.profiles(id)
);
CREATE TABLE public.post_shares (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  post_id uuid NOT NULL,
  shared_by uuid NOT NULL,
  share_comment text CHECK (char_length(share_comment) <= 500),
  share_type text NOT NULL DEFAULT 'repost'::text CHECK (share_type = ANY (ARRAY['repost'::text, 'external'::text])),
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT post_shares_pkey PRIMARY KEY (id),
  CONSTRAINT post_shares_post_id_fkey FOREIGN KEY (post_id) REFERENCES public.posts(id),
  CONSTRAINT post_shares_shared_by_fkey FOREIGN KEY (shared_by) REFERENCES public.profiles(id)
);
CREATE TABLE public.post_tags (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  tag_name text NOT NULL UNIQUE,
  tag_slug text NOT NULL UNIQUE,
  usage_count integer NOT NULL DEFAULT 0 CHECK (usage_count >= 0),
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT post_tags_pkey PRIMARY KEY (id)
);
CREATE TABLE public.post_views (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  post_id uuid NOT NULL,
  viewer_id uuid,
  view_duration_seconds integer,
  device_type text CHECK (device_type = ANY (ARRAY['mobile'::text, 'desktop'::text, 'tablet'::text])),
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT post_views_pkey PRIMARY KEY (id),
  CONSTRAINT post_views_post_id_fkey FOREIGN KEY (post_id) REFERENCES public.posts(id),
  CONSTRAINT post_views_viewer_id_fkey FOREIGN KEY (viewer_id) REFERENCES public.profiles(id)
);
CREATE TABLE public.posts (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  author_id uuid NOT NULL,
  content text NOT NULL CHECK (char_length(content) <= 5000),
  post_type text NOT NULL DEFAULT 'update'::text CHECK (post_type = ANY (ARRAY['update'::text, 'problem'::text, 'article'::text, 'photo'::text, 'poll'::text, 'question'::text])),
  media_urls ARRAY DEFAULT '{}'::text[],
  media_type text CHECK (media_type = ANY (ARRAY['image'::text, 'video'::text, 'document'::text, 'mixed'::text])),
  visibility text NOT NULL DEFAULT 'public'::text CHECK (visibility = ANY (ARRAY['public'::text, 'connections'::text, 'private'::text])),
  problem_category text CHECK (problem_category = ANY (ARRAY['disease'::text, 'mortality'::text, 'feed'::text, 'production'::text, 'equipment'::text, 'management'::text, 'market'::text, 'legal'::text, 'other'::text])),
  problem_urgency text CHECK (problem_urgency = ANY (ARRAY['low'::text, 'medium'::text, 'high'::text, 'critical'::text])),
  problem_resolved boolean DEFAULT false,
  problem_resolved_at timestamp with time zone,
  article_title text CHECK (char_length(article_title) <= 200),
  article_cover_image text,
  article_reading_time_minutes integer CHECK (article_reading_time_minutes > 0),
  likes_count integer NOT NULL DEFAULT 0 CHECK (likes_count >= 0),
  comments_count integer NOT NULL DEFAULT 0 CHECK (comments_count >= 0),
  shares_count integer NOT NULL DEFAULT 0 CHECK (shares_count >= 0),
  views_count integer NOT NULL DEFAULT 0 CHECK (views_count >= 0),
  is_pinned boolean DEFAULT false,
  is_featured boolean DEFAULT false,
  edited boolean DEFAULT false,
  edited_at timestamp with time zone,
  is_reported boolean DEFAULT false,
  is_hidden boolean DEFAULT false,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT posts_pkey PRIMARY KEY (id),
  CONSTRAINT posts_author_id_fkey FOREIGN KEY (author_id) REFERENCES public.profiles(id)
);
CREATE TABLE public.posts_tags (
  post_id uuid NOT NULL,
  tag_id uuid NOT NULL,
  CONSTRAINT posts_tags_pkey PRIMARY KEY (post_id, tag_id),
  CONSTRAINT posts_tags_post_id_fkey FOREIGN KEY (post_id) REFERENCES public.posts(id),
  CONSTRAINT posts_tags_tag_id_fkey FOREIGN KEY (tag_id) REFERENCES public.post_tags(id)
);
CREATE TABLE public.product_categories (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  parent_id uuid,
  name character varying NOT NULL,
  slug character varying NOT NULL UNIQUE,
  level integer NOT NULL,
  icon character varying,
  description text,
  display_order integer DEFAULT 0,
  is_active boolean DEFAULT true,
  metadata jsonb,
  created_at timestamp without time zone DEFAULT now(),
  CONSTRAINT product_categories_pkey PRIMARY KEY (id),
  CONSTRAINT product_categories_parent_id_fkey FOREIGN KEY (parent_id) REFERENCES public.product_categories(id)
);
CREATE TABLE public.product_images (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  product_id uuid NOT NULL,
  image_url text NOT NULL,
  alt_text text,
  is_primary boolean NOT NULL DEFAULT false,
  sort_order integer NOT NULL DEFAULT 0,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT product_images_pkey PRIMARY KEY (id),
  CONSTRAINT product_images_product_id_fkey FOREIGN KEY (product_id) REFERENCES public.business_products(id)
);
CREATE TABLE public.product_reviews (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  product_id uuid NOT NULL,
  reviewer_id uuid NOT NULL,
  rating integer NOT NULL CHECK (rating >= 1 AND rating <= 5),
  review_title text,
  review_text text CHECK (char_length(review_text) <= 500),
  is_verified_purchase boolean NOT NULL DEFAULT false,
  is_approved boolean NOT NULL DEFAULT false,
  moderation_notes text,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT product_reviews_pkey PRIMARY KEY (id),
  CONSTRAINT product_reviews_product_id_fkey FOREIGN KEY (product_id) REFERENCES public.business_products(id),
  CONSTRAINT product_reviews_reviewer_id_fkey FOREIGN KEY (reviewer_id) REFERENCES public.profiles(id)
);
CREATE TABLE public.profile_badges (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  profile_id uuid NOT NULL,
  badge_type text NOT NULL CHECK (badge_type = ANY (ARRAY['early_adopter'::text, 'founding_member'::text, 'active_contributor'::text, 'helpful_expert'::text, 'community_leader'::text, 'profile_complete'::text, 'verified_professional'::text, 'trusted_member'::text, 'well_connected'::text, 'super_connector'::text, 'organization_member'::text, 'multi_organization'::text, 'certified_vet'::text, 'experienced_farmer'::text, 'industry_expert'::text, 'question_master'::text, 'answer_champion'::text, 'skill_endorser'::text, 'event_attendee'::text])),
  badge_level text CHECK (badge_level = ANY (ARRAY['bronze'::text, 'silver'::text, 'gold'::text, 'platinum'::text])),
  earned_at timestamp with time zone NOT NULL DEFAULT now(),
  expires_at timestamp with time zone,
  is_visible boolean NOT NULL DEFAULT true,
  display_order integer NOT NULL DEFAULT 0,
  CONSTRAINT profile_badges_pkey PRIMARY KEY (id),
  CONSTRAINT profile_badges_profile_id_fkey FOREIGN KEY (profile_id) REFERENCES public.profiles(id)
);
CREATE TABLE public.profile_certifications (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  profile_id uuid NOT NULL,
  certification_name text NOT NULL,
  issuing_organization text NOT NULL,
  issue_date date NOT NULL,
  expiry_date date,
  does_not_expire boolean NOT NULL DEFAULT false,
  credential_id text,
  credential_url text,
  certificate_file_url text,
  sort_order integer NOT NULL DEFAULT 0,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT profile_certifications_pkey PRIMARY KEY (id),
  CONSTRAINT profile_certifications_profile_id_fkey FOREIGN KEY (profile_id) REFERENCES public.profiles(id)
);
CREATE TABLE public.profile_completeness_checks (
  profile_id uuid NOT NULL,
  has_profile_photo boolean NOT NULL DEFAULT false,
  has_headline boolean NOT NULL DEFAULT false,
  has_bio boolean NOT NULL DEFAULT false,
  has_location boolean NOT NULL DEFAULT false,
  has_phone_verified boolean NOT NULL DEFAULT false,
  has_email_verified boolean NOT NULL DEFAULT false,
  has_roles boolean NOT NULL DEFAULT false,
  has_experience boolean NOT NULL DEFAULT false,
  has_education boolean NOT NULL DEFAULT false,
  has_skills boolean NOT NULL DEFAULT false,
  has_connections boolean NOT NULL DEFAULT false,
  has_organization_membership boolean NOT NULL DEFAULT false,
  has_endorsements boolean NOT NULL DEFAULT false,
  profile_strength integer NOT NULL DEFAULT 0 CHECK (profile_strength >= 0 AND profile_strength <= 100),
  last_calculated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT profile_completeness_checks_pkey PRIMARY KEY (profile_id),
  CONSTRAINT profile_completeness_checks_profile_id_fkey FOREIGN KEY (profile_id) REFERENCES public.profiles(id)
);
CREATE TABLE public.profile_consultant_details (
  profile_id uuid NOT NULL,
  expertise_areas ARRAY NOT NULL DEFAULT '{}'::text[] CHECK (expertise_areas <@ ARRAY['farm_management'::text, 'nutrition'::text, 'disease_control'::text, 'biosecurity'::text, 'production_optimization'::text, 'quality_assurance'::text, 'financial_planning'::text, 'business_strategy'::text, 'project_setup'::text, 'technical_training'::text, 'other'::text]),
  years_of_experience integer CHECK (years_of_experience >= 0),
  engagement_type ARRAY DEFAULT '{}'::text[] CHECK (engagement_type <@ ARRAY['full_time'::text, 'part_time'::text, 'project_based'::text, 'hourly'::text, 'retainer'::text]),
  typical_fee_structure text,
  service_mode ARRAY DEFAULT '{}'::text[] CHECK (service_mode <@ ARRAY['on_site'::text, 'remote'::text, 'hybrid'::text]),
  geographic_coverage ARRAY DEFAULT '{}'::text[],
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT profile_consultant_details_pkey PRIMARY KEY (profile_id),
  CONSTRAINT profile_consultant_details_profile_id_fkey FOREIGN KEY (profile_id) REFERENCES public.profiles(id)
);
CREATE TABLE public.profile_education (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  profile_id uuid NOT NULL,
  institution_name text NOT NULL,
  degree text NOT NULL,
  field_of_study text,
  start_year integer CHECK (start_year >= 1950 AND start_year::numeric <= (EXTRACT(year FROM CURRENT_DATE) + 10::numeric)),
  end_year integer CHECK (end_year >= 1950 AND end_year::numeric <= (EXTRACT(year FROM CURRENT_DATE) + 10::numeric)),
  is_ongoing boolean NOT NULL DEFAULT false,
  grade text,
  activities text,
  description text CHECK (char_length(description) <= 300),
  sort_order integer NOT NULL DEFAULT 0,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT profile_education_pkey PRIMARY KEY (id),
  CONSTRAINT profile_education_profile_id_fkey FOREIGN KEY (profile_id) REFERENCES public.profiles(id)
);
CREATE TABLE public.profile_experience (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  profile_id uuid NOT NULL,
  title text NOT NULL,
  company_name text NOT NULL,
  employment_type text NOT NULL CHECK (employment_type = ANY (ARRAY['full_time'::text, 'part_time'::text, 'self_employed'::text, 'contract'::text, 'internship'::text, 'seasonal'::text])),
  location text,
  is_current boolean NOT NULL DEFAULT false,
  start_date date NOT NULL,
  end_date date,
  description text CHECK (char_length(description) <= 300),
  key_achievements ARRAY DEFAULT '{}'::text[],
  sort_order integer NOT NULL DEFAULT 0,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT profile_experience_pkey PRIMARY KEY (id),
  CONSTRAINT profile_experience_profile_id_fkey FOREIGN KEY (profile_id) REFERENCES public.profiles(id)
);
CREATE TABLE public.profile_farmer_details (
  profile_id uuid NOT NULL,
  years_of_experience integer CHECK (years_of_experience >= 0),
  farm_specialization ARRAY NOT NULL DEFAULT '{}'::text[] CHECK (farm_specialization <@ ARRAY['broiler'::text, 'layer'::text, 'breeder'::text, 'hatchery'::text, 'backyard'::text, 'organic'::text]),
  farm_scale text CHECK (farm_scale = ANY (ARRAY['small'::text, 'medium'::text, 'large'::text, 'commercial'::text])),
  farming_type ARRAY DEFAULT '{}'::text[] CHECK (farming_type <@ ARRAY['conventional'::text, 'organic'::text, 'free_range'::text, 'cage_free'::text, 'deep_litter'::text, 'battery_cage'::text]),
  primary_breeds ARRAY DEFAULT '{}'::text[],
  certifications ARRAY DEFAULT '{}'::text[],
  avg_batch_size integer CHECK (avg_batch_size >= 0),
  batches_per_year integer CHECK (batches_per_year >= 0 AND batches_per_year <= 12),
  own_hatchery boolean DEFAULT false,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT profile_farmer_details_pkey PRIMARY KEY (profile_id),
  CONSTRAINT profile_farmer_details_profile_id_fkey FOREIGN KEY (profile_id) REFERENCES public.profiles(id)
);
CREATE TABLE public.profile_privacy_settings (
  profile_id uuid NOT NULL,
  phone_visible_to text NOT NULL DEFAULT 'connections'::text CHECK (phone_visible_to = ANY (ARRAY['public'::text, 'connections'::text, 'nobody'::text])),
  email_visible_to text NOT NULL DEFAULT 'connections'::text CHECK (email_visible_to = ANY (ARRAY['public'::text, 'connections'::text, 'nobody'::text])),
  whatsapp_visible_to text NOT NULL DEFAULT 'connections'::text CHECK (whatsapp_visible_to = ANY (ARRAY['public'::text, 'connections'::text, 'nobody'::text])),
  show_in_search boolean NOT NULL DEFAULT true,
  show_to_non_members boolean NOT NULL DEFAULT true,
  show_connections_list boolean NOT NULL DEFAULT true,
  show_endorsements boolean NOT NULL DEFAULT true,
  allow_connection_requests boolean NOT NULL DEFAULT true,
  allow_message_requests boolean NOT NULL DEFAULT true,
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT profile_privacy_settings_pkey PRIMARY KEY (profile_id),
  CONSTRAINT profile_privacy_settings_profile_id_fkey FOREIGN KEY (profile_id) REFERENCES public.profiles(id)
);
CREATE TABLE public.profile_researcher_details (
  profile_id uuid NOT NULL,
  research_areas ARRAY NOT NULL DEFAULT '{}'::text[] CHECK (research_areas <@ ARRAY['genetics'::text, 'nutrition'::text, 'disease'::text, 'welfare'::text, 'environment'::text, 'production_systems'::text, 'product_quality'::text, 'food_safety'::text, 'economics'::text, 'other'::text]),
  current_institution text,
  department text,
  position text,
  years_in_research integer CHECK (years_in_research >= 0),
  publications_count integer DEFAULT 0 CHECK (publications_count >= 0),
  open_to_collaboration boolean DEFAULT true,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT profile_researcher_details_pkey PRIMARY KEY (profile_id),
  CONSTRAINT profile_researcher_details_profile_id_fkey FOREIGN KEY (profile_id) REFERENCES public.profiles(id)
);
CREATE TABLE public.profile_roles (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  profile_id uuid NOT NULL,
  role_type text NOT NULL CHECK (role_type = ANY (ARRAY['farmer'::text, 'veterinarian'::text, 'supplier'::text, 'consultant'::text, 'researcher'::text, 'trader'::text, 'transporter'::text, 'processor'::text, 'feed_miller'::text, 'hatchery_operator'::text, 'equipment_dealer'::text, 'lab_technician'::text, 'farm_manager'::text, 'quality_controller'::text, 'nutritionist'::text, 'breeder'::text, 'educator'::text, 'student'::text, 'other'::text])),
  is_active boolean NOT NULL DEFAULT true,
  is_primary boolean NOT NULL DEFAULT false,
  sort_order integer NOT NULL DEFAULT 0,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT profile_roles_pkey PRIMARY KEY (id),
  CONSTRAINT profile_roles_profile_id_fkey FOREIGN KEY (profile_id) REFERENCES public.profiles(id)
);
CREATE TABLE public.profile_skills (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  profile_id uuid NOT NULL,
  skill_id uuid NOT NULL,
  proficiency_level text CHECK (proficiency_level = ANY (ARRAY['beginner'::text, 'intermediate'::text, 'advanced'::text, 'expert'::text])),
  years_of_experience integer CHECK (years_of_experience >= 0),
  sort_order integer NOT NULL DEFAULT 0,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT profile_skills_pkey PRIMARY KEY (id),
  CONSTRAINT profile_skills_profile_id_fkey FOREIGN KEY (profile_id) REFERENCES public.profiles(id),
  CONSTRAINT profile_skills_skill_id_fkey FOREIGN KEY (skill_id) REFERENCES public.skills(id)
);
CREATE TABLE public.profile_stats (
  profile_id uuid NOT NULL,
  connections_count integer NOT NULL DEFAULT 0 CHECK (connections_count >= 0),
  followers_count integer NOT NULL DEFAULT 0 CHECK (followers_count >= 0),
  following_count integer NOT NULL DEFAULT 0 CHECK (following_count >= 0),
  posts_count integer NOT NULL DEFAULT 0 CHECK (posts_count >= 0),
  comments_count integer NOT NULL DEFAULT 0 CHECK (comments_count >= 0),
  profile_views_count integer NOT NULL DEFAULT 0 CHECK (profile_views_count >= 0),
  profile_views_this_month integer NOT NULL DEFAULT 0 CHECK (profile_views_this_month >= 0),
  skills_count integer NOT NULL DEFAULT 0 CHECK (skills_count >= 0),
  endorsements_received_count integer NOT NULL DEFAULT 0 CHECK (endorsements_received_count >= 0),
  endorsements_given_count integer NOT NULL DEFAULT 0 CHECK (endorsements_given_count >= 0),
  organization_memberships_count integer NOT NULL DEFAULT 0 CHECK (organization_memberships_count >= 0),
  events_attended_count integer NOT NULL DEFAULT 0 CHECK (events_attended_count >= 0),
  last_updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT profile_stats_pkey PRIMARY KEY (profile_id),
  CONSTRAINT profile_stats_profile_id_fkey FOREIGN KEY (profile_id) REFERENCES public.profiles(id)
);
CREATE TABLE public.profile_supplier_details (
  profile_id uuid NOT NULL,
  supplier_type ARRAY NOT NULL DEFAULT '{}'::text[] CHECK (supplier_type <@ ARRAY['feed'::text, 'medicine'::text, 'equipment'::text, 'chicks'::text, 'supplements'::text, 'vaccines'::text, 'disinfectants'::text, 'packaging'::text, 'spare_parts'::text, 'other'::text]),
  years_in_business integer CHECK (years_in_business >= 0),
  service_coverage ARRAY DEFAULT '{}'::text[],
  brands_dealt ARRAY DEFAULT '{}'::text[],
  minimum_order_info text,
  payment_terms_offered ARRAY DEFAULT '{}'::text[] CHECK (payment_terms_offered <@ ARRAY['cash'::text, 'credit_7_days'::text, 'credit_15_days'::text, 'credit_30_days'::text, 'credit_45_days'::text, 'advance'::text]),
  delivery_available boolean DEFAULT false,
  delivery_time_typical text,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT profile_supplier_details_pkey PRIMARY KEY (profile_id),
  CONSTRAINT profile_supplier_details_profile_id_fkey FOREIGN KEY (profile_id) REFERENCES public.profiles(id)
);
CREATE TABLE public.profile_verifications (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  profile_id uuid NOT NULL,
  verification_type text NOT NULL CHECK (verification_type = ANY (ARRAY['phone'::text, 'email'::text, 'government_id'::text, 'vet_license'::text, 'business_registration'::text, 'address'::text, 'photo_id'::text, 'educational_certificate'::text, 'professional_license'::text])),
  verification_status text NOT NULL DEFAULT 'pending'::text CHECK (verification_status = ANY (ARRAY['pending'::text, 'verified'::text, 'rejected'::text, 'expired'::text])),
  document_url text,
  document_number text,
  verified_by uuid,
  verified_at timestamp with time zone,
  expires_at timestamp with time zone,
  rejection_reason text,
  notes text,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT profile_verifications_pkey PRIMARY KEY (id),
  CONSTRAINT profile_verifications_profile_id_fkey FOREIGN KEY (profile_id) REFERENCES public.profiles(id),
  CONSTRAINT profile_verifications_verified_by_fkey FOREIGN KEY (verified_by) REFERENCES public.profiles(id)
);
CREATE TABLE public.profile_veterinarian_details (
  profile_id uuid NOT NULL,
  license_number text,
  license_issuing_authority text,
  license_state text,
  license_expiry_date date,
  specialization ARRAY NOT NULL DEFAULT '{}'::text[] CHECK (specialization <@ ARRAY['poultry_medicine'::text, 'nutrition'::text, 'pathology'::text, 'surgery'::text, 'reproduction'::text, 'epidemiology'::text, 'diagnostics'::text, 'preventive_care'::text, 'disease_management'::text, 'vaccination'::text, 'biosecurity'::text, 'public_health'::text]),
  years_of_practice integer CHECK (years_of_practice >= 0),
  consultation_mode ARRAY DEFAULT '{}'::text[] CHECK (consultation_mode <@ ARRAY['on_farm'::text, 'clinic'::text, 'phone'::text, 'video_call'::text, 'emergency'::text]),
  typical_fees_range text,
  farms_served_count integer CHECK (farms_served_count >= 0),
  practice_type text CHECK (practice_type = ANY (ARRAY['government'::text, 'private'::text, 'ngo'::text, 'corporate'::text, 'independent'::text])),
  service_areas ARRAY DEFAULT '{}'::text[],
  emergency_available boolean DEFAULT false,
  emergency_phone text,
  backup_vet_id uuid,
  available_hours text,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT profile_veterinarian_details_pkey PRIMARY KEY (profile_id),
  CONSTRAINT profile_veterinarian_details_profile_id_fkey FOREIGN KEY (profile_id) REFERENCES public.profiles(id),
  CONSTRAINT profile_veterinarian_details_backup_vet_id_fkey FOREIGN KEY (backup_vet_id) REFERENCES public.profiles(id)
);
CREATE TABLE public.profiles (
  id uuid NOT NULL,
  full_name text NOT NULL,
  profile_slug text NOT NULL UNIQUE,
  profile_photo_url text,
  headline text CHECK (char_length(headline) <= 150),
  bio text CHECK (char_length(bio) <= 500),
  location_state text,
  location_district text,
  location_city text,
  country text DEFAULT 'Global'::text,
  phone text,
  phone_verified boolean NOT NULL DEFAULT false,
  email text NOT NULL,
  email_verified boolean NOT NULL DEFAULT false,
  whatsapp_number text,
  profile_strength integer NOT NULL DEFAULT 0 CHECK (profile_strength >= 0 AND profile_strength <= 100),
  verification_level text NOT NULL DEFAULT 'basic'::text CHECK (verification_level = ANY (ARRAY['basic'::text, 'verified'::text, 'trusted'::text])),
  is_public boolean NOT NULL DEFAULT true,
  last_active_at timestamp with time zone,
  last_profile_update_at timestamp with time zone,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  cover_photo_url text,
  location_place_id character varying,
  location_country character varying DEFAULT 'IND'::character varying,
  location_postal_code character varying,
  location_formatted text,
  location_coordinates USER-DEFINED,
  is_active boolean NOT NULL DEFAULT true,
  CONSTRAINT profiles_pkey PRIMARY KEY (id),
  CONSTRAINT profiles_id_fkey FOREIGN KEY (id) REFERENCES auth.users(id)
);
CREATE TABLE public.skill_endorsements (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  profile_skill_id uuid NOT NULL,
  endorsed_by uuid NOT NULL,
  endorsement_message text CHECK (char_length(endorsement_message) <= 200),
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT skill_endorsements_pkey PRIMARY KEY (id),
  CONSTRAINT skill_endorsements_profile_skill_id_fkey FOREIGN KEY (profile_skill_id) REFERENCES public.profile_skills(id),
  CONSTRAINT skill_endorsements_endorsed_by_fkey FOREIGN KEY (endorsed_by) REFERENCES public.profiles(id)
);
CREATE TABLE public.skills (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  skill_name text NOT NULL UNIQUE,
  skill_category text CHECK (skill_category = ANY (ARRAY['technical'::text, 'management'::text, 'operational'::text, 'analytical'::text, 'communication'::text, 'safety'::text, 'compliance'::text, 'software'::text, 'other'::text])),
  description text,
  related_skills ARRAY DEFAULT '{}'::text[],
  skill_synonyms ARRAY DEFAULT '{}'::text[],
  usage_count integer NOT NULL DEFAULT 0,
  is_approved boolean NOT NULL DEFAULT true,
  created_by uuid,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT skills_pkey PRIMARY KEY (id),
  CONSTRAINT skills_created_by_fkey FOREIGN KEY (created_by) REFERENCES public.profiles(id)
);
CREATE TABLE public.spatial_ref_sys (
  srid integer NOT NULL CHECK (srid > 0 AND srid <= 998999),
  auth_name character varying,
  auth_srid integer,
  srtext character varying,
  proj4text character varying,
  CONSTRAINT spatial_ref_sys_pkey PRIMARY KEY (srid)
);
CREATE TABLE public.user_activity (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL,
  activity_type text NOT NULL CHECK (activity_type = ANY (ARRAY['login'::text, 'logout'::text, 'profile_view'::text, 'profile_update'::text, 'post_created'::text, 'post_viewed'::text, 'post_liked'::text, 'post_commented'::text, 'connection_sent'::text, 'connection_accepted'::text, 'message_sent'::text, 'message_read'::text, 'job_posted'::text, 'job_applied'::text, 'event_registered'::text, 'event_attended'::text, 'tool_used'::text, 'search_performed'::text, 'other'::text])),
  entity_type text,
  entity_id uuid,
  metadata jsonb DEFAULT '{}'::jsonb,
  session_id text,
  device_type text CHECK (device_type = ANY (ARRAY['mobile'::text, 'desktop'::text, 'tablet'::text])),
  browser text,
  ip_address inet,
  location_city text,
  location_state text,
  location_country text,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT user_activity_pkey PRIMARY KEY (id),
  CONSTRAINT user_activity_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.profiles(id)
);
CREATE TABLE public.user_dashboard_widgets (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL,
  widget_type text NOT NULL CHECK (widget_type = ANY (ARRAY['market_prices'::text, 'fcr_calculator'::text, 'feed_projection'::text, 'profit_calculator'::text, 'mortality_tracker'::text, 'quick_links'::text, 'recent_posts'::text, 'network_activity'::text, 'upcoming_events'::text, 'weather'::text, 'news_feed'::text, 'stats_summary'::text, 'community_growth'::text])),
  position integer NOT NULL CHECK ("position" >= 0),
  column_span integer NOT NULL DEFAULT 1 CHECK (column_span >= 1 AND column_span <= 3),
  row_span integer NOT NULL DEFAULT 1 CHECK (row_span >= 1 AND row_span <= 4),
  visible boolean NOT NULL DEFAULT true,
  config jsonb DEFAULT '{}'::jsonb,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT user_dashboard_widgets_pkey PRIMARY KEY (id),
  CONSTRAINT user_dashboard_widgets_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.profiles(id)
);
CREATE TABLE public.user_preferences (
  user_id uuid NOT NULL,
  language text NOT NULL DEFAULT 'en'::text CHECK (language = ANY (ARRAY['en'::text, 'ta'::text, 'hi'::text, 'te'::text, 'kn'::text, 'ml'::text, 'bn'::text, 'mr'::text])),
  theme text NOT NULL DEFAULT 'light'::text CHECK (theme = ANY (ARRAY['light'::text, 'dark'::text, 'auto'::text])),
  email_digest_frequency text NOT NULL DEFAULT 'weekly'::text CHECK (email_digest_frequency = ANY (ARRAY['daily'::text, 'weekly'::text, 'monthly'::text, 'never'::text])),
  show_profile_views boolean NOT NULL DEFAULT true,
  show_connection_count boolean NOT NULL DEFAULT true,
  show_last_active boolean NOT NULL DEFAULT true,
  searchable boolean NOT NULL DEFAULT true,
  default_post_visibility text NOT NULL DEFAULT 'public'::text CHECK (default_post_visibility = ANY (ARRAY['public'::text, 'connections'::text, 'private'::text])),
  preferences_json jsonb DEFAULT '{}'::jsonb,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT user_preferences_pkey PRIMARY KEY (user_id),
  CONSTRAINT user_preferences_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.profiles(id)
);